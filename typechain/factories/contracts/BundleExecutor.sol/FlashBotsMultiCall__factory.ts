/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FlashBotsMultiCall,
  FlashBotsMultiCallInterface,
} from "../../../contracts/BundleExecutor.sol/FlashBotsMultiCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BundleExecutor__CallFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "BundleExecutor__OnlyExecutor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "BundleExecutor__OnlyOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wethAmountToFirstMarket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ethAmountToCoinbase",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
    ],
    name: "uniswapWeth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405260405162001a2338038062001a23833981810160405281019062000029919062000137565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000341115620001195773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015620000fe57600080fd5b505af115801562000113573d6000803e3d6000fd5b50505050505b50620001bc565b6000815190506200013181620001a2565b92915050565b60006020828403121562000150576200014f6200019d565b5b6000620001608482850162000120565b91505092915050565b600062000176826200017d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001ad8162000169565b8114620001b957600080fd5b50565b60805160601c60a05160601c61182d620001f66000396000818161042d01526104800152600081816101d9015261022c015261182d6000f3fe60806040526004361061002d5760003560e01c80636dbf2fa0146100b2578063ecd494b3146100e257610072565b36610072576100706040518060400160405280601281526020017f466c617368426f74734d756c746943616c6c00000000000000000000000000008152506100fe565b005b6100b06040518060400160405280601881526020017f42756e646c654578656375746f725f5f66616c6c6261636b00000000000000008152506100fe565b005b6100cc60048036038101906100c79190610e56565b610197565b6040516100d991906111d2565b60405180910390f35b6100fc60048036038101906100f79190610f24565b6103ed565b005b6101948160405160240161011291906111f4565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b08565b50565b60606101d76040518060400160405280601981526020017f42756e646c654578656375746f725f5f4f6e6c794f776e6572000000000000008152506100fe565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610289577f0000000000000000000000000000000000000000000000000000000000000000336040517f5a63617e000000000000000000000000000000000000000000000000000000008152600401610280929190611180565b60405180910390fd5b6102c76040518060400160405280601481526020017f42756e646c654578656375746f725f5f63616c6c0000000000000000000000008152506100fe565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e906112a6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16868686604051610362929190611135565b60006040518083038185875af1925050503d806000811461039f576040519150601f19603f3d011682016040523d82523d6000602084013e6103a4565b606091505b5091509150816103e0576040517f1435a19c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8092505050949350505050565b61042b6040518060400160405280601c81526020017f42756e646c654578656375746f725f5f4f6e6c794578656375746f72000000008152506100fe565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd577f0000000000000000000000000000000000000000000000000000000000000000336040517fb9eee6830000000000000000000000000000000000000000000000000000000081526004016104d4929190611180565b60405180910390fd5b8051825114610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611246565b60405180910390fd5b61055f6040518060400160405280601b81526020017f42756e646c654578656375746f725f5f756e69737761705765746800000000008152506100fe565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ae9190611165565b60206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610ef7565b905061063f6040518060400160405280601481526020017f5f7765746842616c616e63654265666f72653a2000000000000000000000000081525082610b31565b61067e6040518060400160405280601a81526020017f5f77657468416d6f756e74546f46697273744d61726b65743a2000000000000081525086610b31565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846000815181106106c2576106c16115a1565b5b6020026020010151876040518363ffffffff1660e01b81526004016106e89291906111a9565b602060405180830381600087803b15801561070257600080fd5b505af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610eca565b506107796040518060400160405280601481526020017f57455448207472617366657220737563636573730000000000000000000000008152506100fe565b60005b835181101561089e576107a66040518060600160405280602181526020016117a8602191396100fe565b6000808583815181106107bc576107bb6115a1565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168584815181106107ed576107ec6115a1565b5b6020026020010151604051610802919061114e565b6000604051808303816000865af19150503d806000811461083f576040519150601f19603f3d011682016040523d82523d6000602084013e610844565b606091505b509150915081610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611286565b60405180910390fd5b5050808061089690611529565b91505061077c565b50600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ee9190611165565b60206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610ef7565b90506109626040518060600160405280602d815260200161177b602d913982610b31565b848261096e91906113d2565b81116109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a690611266565b60405180910390fd5b6109ee6040518060400160405280601781526020017f5f65746820616d6f756e7420746f20636f696e6261736500000000000000000081525086610b31565b60008514156109fe575050610b02565b600047905085811015610a965773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8288610a479190611428565b6040518263ffffffff1660e01b8152600401610a6391906112c6565b600060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b505050505b610ab76040518060600160405280602f81526020016117c9602f91396100fe565b4173ffffffffffffffffffffffffffffffffffffffff166108fc879081150290604051600060405180830381858888f19350505050158015610afd573d6000803e3d6000fd5b505050505b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b610bc98282604051602401610b47929190611216565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b08565b5050565b6000610be0610bdb84611306565b6112e1565b90508083825260208201905082856020860282011115610c0357610c02611609565b5b60005b85811015610c335781610c198882610d0d565b845260208401935060208301925050600181019050610c06565b5050509392505050565b6000610c50610c4b84611332565b6112e1565b90508083825260208201905082856020860282011115610c7357610c72611609565b5b60005b85811015610cc157813567ffffffffffffffff811115610c9957610c98611604565b5b808601610ca68982610dfe565b85526020850194506020840193505050600181019050610c76565b5050509392505050565b6000610cde610cd98461135e565b6112e1565b905082815260208101848484011115610cfa57610cf961160e565b5b610d058482856114b6565b509392505050565b600081359050610d1c8161171e565b92915050565b600081359050610d3181611735565b92915050565b600082601f830112610d4c57610d4b611604565b5b8135610d5c848260208601610bcd565b91505092915050565b600082601f830112610d7a57610d79611604565b5b8135610d8a848260208601610c3d565b91505092915050565b600081519050610da28161174c565b92915050565b60008083601f840112610dbe57610dbd611604565b5b8235905067ffffffffffffffff811115610ddb57610dda6115ff565b5b602083019150836001820283011115610df757610df6611609565b5b9250929050565b600082601f830112610e1357610e12611604565b5b8135610e23848260208601610ccb565b91505092915050565b600081359050610e3b81611763565b92915050565b600081519050610e5081611763565b92915050565b60008060008060608587031215610e7057610e6f611618565b5b6000610e7e87828801610d22565b9450506020610e8f87828801610e2c565b935050604085013567ffffffffffffffff811115610eb057610eaf611613565b5b610ebc87828801610da8565b925092505092959194509250565b600060208284031215610ee057610edf611618565b5b6000610eee84828501610d93565b91505092915050565b600060208284031215610f0d57610f0c611618565b5b6000610f1b84828501610e41565b91505092915050565b60008060008060808587031215610f3e57610f3d611618565b5b6000610f4c87828801610e2c565b9450506020610f5d87828801610e2c565b935050604085013567ffffffffffffffff811115610f7e57610f7d611613565b5b610f8a87828801610d37565b925050606085013567ffffffffffffffff811115610fab57610faa611613565b5b610fb787828801610d65565b91505092959194509250565b610fcc8161145c565b82525050565b6000610fde83856113b6565b9350610feb8385846114b6565b82840190509392505050565b60006110028261138f565b61100c81856113a5565b935061101c8185602086016114c5565b6110258161161d565b840191505092915050565b600061103b8261138f565b61104581856113b6565b93506110558185602086016114c5565b80840191505092915050565b600061106c8261139a565b61107681856113c1565b93506110868185602086016114c5565b61108f8161161d565b840191505092915050565b60006110a76034836113c1565b91506110b28261162e565b604082019050919050565b60006110ca6013836113c1565b91506110d58261167d565b602082019050919050565b60006110ed600f836113c1565b91506110f8826116a6565b602082019050919050565b60006111106028836113c1565b915061111b826116cf565b604082019050919050565b61112f816114ac565b82525050565b6000611142828486610fd2565b91508190509392505050565b600061115a8284611030565b915081905092915050565b600060208201905061117a6000830184610fc3565b92915050565b60006040820190506111956000830185610fc3565b6111a26020830184610fc3565b9392505050565b60006040820190506111be6000830185610fc3565b6111cb6020830184611126565b9392505050565b600060208201905081810360008301526111ec8184610ff7565b905092915050565b6000602082019050818103600083015261120e8184611061565b905092915050565b600060408201905081810360008301526112308185611061565b905061123f6020830184611126565b9392505050565b6000602082019050818103600083015261125f8161109a565b9050919050565b6000602082019050818103600083015261127f816110bd565b9050919050565b6000602082019050818103600083015261129f816110e0565b9050919050565b600060208201905081810360008301526112bf81611103565b9050919050565b60006020820190506112db6000830184611126565b92915050565b60006112eb6112fc565b90506112f782826114f8565b919050565b6000604051905090565b600067ffffffffffffffff821115611321576113206115d0565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561134d5761134c6115d0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611379576113786115d0565b5b6113828261161d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006113dd826114ac565b91506113e8836114ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141d5761141c611572565b5b828201905092915050565b6000611433826114ac565b915061143e836114ac565b92508282101561145157611450611572565b5b828203905092915050565b60006114678261148c565b9050919050565b60006114798261148c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156114e35780820151818401526020810190506114c8565b838111156114f2576000848401525b50505050565b6115018261161d565b810181811067ffffffffffffffff821117156115205761151f6115d0565b5b80604052505050565b6000611534826114ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561156757611566611572565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f42756e646c654578656375746f723a207461726765747320616e64207061796c60008201527f6f616473206c656e677468206d69736d61746368000000000000000000000000602082015250565b7f646964206e6f74206d616b652070726f66697400000000000000000000000000600082015250565b7f7472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f42756e646c654578656375746f723a2063616e6e6f742063616c6c207a65726f60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b6117278161145c565b811461173257600080fd5b50565b61173e8161146e565b811461174957600080fd5b50565b61175581611480565b811461176057600080fd5b50565b61176c816114ac565b811461177757600080fd5b5056fe42756e646c654578656375746f725f5f756e6973776170576574685f5f7765746842616c616e6365416674657242756e646c654578656375746f725f5f756e6973776170576574685f5f63616c6c42756e646c654578656375746f725f5f756e6973776170576574685f5f7472616e736665725f5f636f696e62617365a2646970667358221220477b8a94f52bee842b8d93a75c25b8116557d18328ae612fdb10da976f53651a64736f6c63430008070033";

type FlashBotsMultiCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashBotsMultiCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashBotsMultiCall__factory extends ContractFactory {
  constructor(...args: FlashBotsMultiCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _executor: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashBotsMultiCall> {
    return super.deploy(
      _executor,
      overrides || {}
    ) as Promise<FlashBotsMultiCall>;
  }
  override getDeployTransaction(
    _executor: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_executor, overrides || {});
  }
  override attach(address: string): FlashBotsMultiCall {
    return super.attach(address) as FlashBotsMultiCall;
  }
  override connect(signer: Signer): FlashBotsMultiCall__factory {
    return super.connect(signer) as FlashBotsMultiCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashBotsMultiCallInterface {
    return new utils.Interface(_abi) as FlashBotsMultiCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashBotsMultiCall {
    return new Contract(address, _abi, signerOrProvider) as FlashBotsMultiCall;
  }
}
