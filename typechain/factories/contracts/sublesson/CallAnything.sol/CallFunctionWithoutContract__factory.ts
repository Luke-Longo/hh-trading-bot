/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CallFunctionWithoutContract,
  CallFunctionWithoutContractInterface,
} from "../../../../contracts/sublesson/CallAnything.sol/CallFunctionWithoutContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "selectorsAndSignaturesAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "callFunctionDirectly",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "someAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callTransferFunctionDirectlyThree",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_selectorsAndSignaturesAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staticCallFunctionDirectly",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a17380380610a178339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b610900806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ce431b9146100515780637690a4a21461007057806378d331d6146100a1578063e4ca8507146100bf575b600080fd5b6100596100f0565b6040516100679291906106af565b60405180910390f35b61008a6004803603810190610085919061056d565b610217565b6040516100989291906106af565b60405180910390f35b6100a9610350565b6040516100b6919061066b565b60405180910390f35b6100d960048036038101906100d4919061052d565b610374565b6040516100e79291906106af565b60405180910390f35b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f9a41d3ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101bd9190610654565b600060405180830381855afa9150503d80600081146101f8576040519150601f19603f3d011682016040523d82523d6000602084013e6101fd565b606091505b50915091508061020c906107a7565b829350935050509091565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1686866040516024016102679291906106d8565b6040516020818303038152906040527fce6eb7ff000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102f19190610654565b6000604051808303816000865af19150503d806000811461032e576040519150601f19603f3d011682016040523d82523d6000602084013e610333565b606091505b509150915080610342906107a7565b829350935050509250929050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1686866040516024016103c4929190610686565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161044e9190610654565b6000604051808303816000865af19150503d806000811461048b576040519150601f19603f3d011682016040523d82523d6000602084013e610490565b606091505b50915091508061049f906107a7565b829350935050509250929050565b6000813590506104bc8161089c565b92915050565b60008083601f8401126104d8576104d761086a565b5b8235905067ffffffffffffffff8111156104f5576104f4610865565b5b6020830191508360018202830111156105115761051061086f565b5b9250929050565b600081359050610527816108b3565b92915050565b6000806040838503121561054457610543610879565b5b6000610552858286016104ad565b925050602061056385828601610518565b9150509250929050565b6000806020838503121561058457610583610879565b5b600083013567ffffffffffffffff8111156105a2576105a1610874565b5b6105ae858286016104c2565b92509250509250929050565b6105c381610733565b82525050565b6105d281610745565b82525050565b6105e181610751565b82525050565b60006105f38385610717565b935061060083858461080e565b6106098361087e565b840190509392505050565b600061061f8261070c565b6106298185610728565b935061063981856020860161081d565b80840191505092915050565b61064e8161079d565b82525050565b60006106608284610614565b915081905092915050565b600060208201905061068060008301846105ba565b92915050565b600060408201905061069b60008301856105ba565b6106a86020830184610645565b9392505050565b60006040820190506106c460008301856105d8565b6106d160208301846105c9565b9392505050565b600060208201905081810360008301526106f38184866105e7565b90509392505050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061073e8261077d565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107b28261070c565b826107bc846106fc565b90506107c781610850565b92506004821015610807576108027fffffffff000000000000000000000000000000000000000000000000000000008360040360080261088f565b831692505b5050919050565b82818337600083830152505050565b60005b8381101561083b578082015181840152602081019050610820565b8381111561084a576000848401525b50505050565b600061085c8251610751565b80915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600082821b905092915050565b6108a581610733565b81146108b057600080fd5b50565b6108bc8161079d565b81146108c757600080fd5b5056fea2646970667358221220986c65e1811973a939c07def0038ef945d14183e99fc2f9712beac53e79aa11764736f6c63430008070033";

type CallFunctionWithoutContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallFunctionWithoutContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallFunctionWithoutContract__factory extends ContractFactory {
  constructor(...args: CallFunctionWithoutContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    selectorsAndSignaturesAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallFunctionWithoutContract> {
    return super.deploy(
      selectorsAndSignaturesAddress,
      overrides || {}
    ) as Promise<CallFunctionWithoutContract>;
  }
  override getDeployTransaction(
    selectorsAndSignaturesAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      selectorsAndSignaturesAddress,
      overrides || {}
    );
  }
  override attach(address: string): CallFunctionWithoutContract {
    return super.attach(address) as CallFunctionWithoutContract;
  }
  override connect(signer: Signer): CallFunctionWithoutContract__factory {
    return super.connect(signer) as CallFunctionWithoutContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallFunctionWithoutContractInterface {
    return new utils.Interface(_abi) as CallFunctionWithoutContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallFunctionWithoutContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CallFunctionWithoutContract;
  }
}
